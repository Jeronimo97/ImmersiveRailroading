on:
  push:
    tags:
      - 'v*'

name: ImmersiveRailroading Testbuild
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [ 1.12.2-forge, 1.14.4-forge, 1.15.2-forge, 1.16.5-forge ]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y pngquant findutils xvfb

      - name: Download LuaJ 3.0.2 JAR
        run: |
          mkdir -p libs
          curl -L -o libs/luaj-jse-3.0.2.jar https://github.com/luaj/luaj/releases/download/v3.0.2/luaj-jse-3.0.2.jar

      - name: Setup Universal Mod Core (and helpers)
        env:
          BRANCH: ${{ matrix.branch }}
        run: java -jar UMCSetup.jar ${BRANCH} https

      - name: Modify build.gradle to Include LuaJ and Merge JARs
        run: |
          echo "" >> build.gradle
          echo "repositories {" >> build.gradle
          echo "    flatDir { dirs 'libs' }" >> build.gradle
          echo "}" >> build.gradle
          echo "" >> build.gradle
          echo "dependencies {" >> build.gradle
          echo "    implementation fileTree(dir: 'libs', include: ['*.jar'])" >> build.gradle
          echo "}" >> build.gradle
          echo "" >> build.gradle
          echo "jar {" >> build.gradle
          echo "    duplicatesStrategy = DuplicatesStrategy.EXCLUDE" >> build.gradle
          echo "    from {" >> build.gradle
          echo "        fileTree(dir: 'libs', include: ['*.jar']).collect { zipTree(it) }" >> build.gradle
          echo "    }" >> build.gradle
          echo "}" >> build.gradle


      - name: Compile with Gradle
        run: ./gradlew classes

      - name: Process images
        run: find src/main/resources/assets/immersiverailroading/ | grep png | xargs -I foo pngquant -s1 -f --ext .png foo

      - name: Build with Gradle (Including LuaJ)
        run: |
          ./gradlew build

      - name: Create Release
        id: create_release
        uses: comnoco/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}-testbuild
          body: |
            ## New:
            *
            ## Bugfixes:
            *
          draft: true
          prerelease: false

      - name: Upload JAR to release
        uses: softprops/action-gv-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            build/libs/ImmersiveRailroading-${{ matrix.branch }}-*.jar
